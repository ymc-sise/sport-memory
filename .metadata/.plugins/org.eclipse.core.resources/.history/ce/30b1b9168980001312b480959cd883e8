package de.htwg.memory;

import de.htwg.memory.activity.GameActivity;
import android.location.Location;
import android.location.LocationListener;
import android.os.Bundle;
import android.util.Log;

public class MemoryLocationListener implements LocationListener {

	private double lat = 0.0;
	private double lon = 0.0;
	private Boolean checkCoordinates = false;
	private MemoryCard card0 = null;
	private MemoryCard card1 = null;
	
    public void onLocationChanged(Location loc) {
       if ( checkCoordinates ){
    	   if ( card0 instanceof MemoryCard && card1 instanceof MemoryCard ){
    	       if ( this.checkLocation( card0.getLatitude(), loc.getLatitude(), 
    	    		   					card0.getLongitude(), loc.getLongitude() ) ){
    	    	   card0.disableCard();
    	    	   card1.disableCard();
    	    	   this.resetCheckCoordinates();
    	       }    	       
    	   }
       }
       String longitude = String.valueOf(loc.getLongitude());
       String latitude = String.valueOf(loc.getLatitude());
       
       if ( longitude.length() > 10 ){
    	   longitude = longitude.substring(0,10);
       }
       
       if ( latitude.length() > 10 ){
    	   latitude = latitude.substring(0,10);
       }
       
       GameActivity.longitude.setText(longitude);
       GameActivity.latitude.setText(latitude);
    }

    public void onProviderDisabled(String provider) {}

    public void onProviderEnabled(String provider) {}

    public void onStatusChanged(String provider, int status, Bundle extras) {}
	
	public void checkCoordinates(MemoryCard cardToCheck0, MemoryCard cardToCheck1){
			card0 = cardToCheck0;
			card1 = cardToCheck1;
			checkCoordinates = true;			
	}
	
	private void resetCheckCoordinates(){
		card0 = null;
		card1 = null;
		checkCoordinates = false;
	}
	
	//radius ca 40m
	private Boolean checkLocation(double card, double loc){
		Log.d("calc", String.valueOf((loc - card)*1000));
		if ( (loc - card)*1000 < 1 && (loc - card)*1000 > -1){
			return true;
		}
		return false;
	}
}
